version: "3.7"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 22181
    volumes:
      - ./data/zookeeper/data:/data
      - ./data/zookeeper/datalog:/datalog
  kafka-1:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    volumes:
      - ./data/kafka-1/data:/var/lib/kafka/data
    ports:
      - "9091:9091"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:22181
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INTERNAL://kafka-1:19091,LISTENER_EXTERNAL://localhost:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INTERNAL:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL
  kafka-2:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    volumes:
      - ./data/kafka-2/data:/var/lib/kafka/data
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:22181
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INTERNAL://kafka-2:29092,LISTENER_EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INTERNAL:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL
  kafka-3:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    volumes:
      - ./data/kafka-3/data:/var/lib/kafka/data
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:22181
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INTERNAL://kafka-3:39093,LISTENER_EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INTERNAL:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka-1:19091, kafka-2:29092, kafka-3:39093"
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
  producer:
    build:
      dockerfile: Dockerfile
      context: ./producer
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
  consumer:
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./consumer
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3